- name: Update package list
  apt:
    update_cache: yes

- name: Install basic packages
  apt:
    name: "{{ BASIC_PACKAGES }}"
    state: present

- name: Unzip frontend source code
  shell: |
    rm -rf {{ FRONTEND_DIR }}/*
    unzip -o {{ FRONTEND_DIR }}.zip -d {{ FRONTEND_DIR }}
  args:
    executable: /bin/bash

- name: Install dependencies for building from source
  apt:
    name:
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Download Node.js 15.4.x binaries
  get_url:
    url: "https://nodejs.org/dist/v15.4.0/node-v15.4.0-linux-x64.tar.xz"
    dest: "/tmp/node-v15.4.0-linux-x64.tar.xz"

- name: Extract Node.js binaries
  unarchive:
    src: "/tmp/node-v15.4.0-linux-x64.tar.xz"
    dest: "/usr/local/"
    remote_src: yes

- name: Create symbolic links for node and npm
  file:
    src: "/usr/local/node-v15.4.0-linux-x64/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
  with_items:
    - node
    - npm

- name: Install Node.js 15.x
  apt:
    name: nodejs
    state: present

- name: Install specific npm version
  command: "npm install -g npm@7.7.6"

- name: Configure .env file for frontend
  lineinfile:
    path: "{{ FRONTEND_DIR }}/.env"
    regexp: '^API_URL='
    line: "API_URL={{ API_URL }}"
    create: yes


#- name: Run npm install and start
#  shell: "npm install & npm start"
#  args:
#    chdir: "{{ FRONTEND_DIR }}"
#
#- name: Wait for frontend to start
#  pause:
#    seconds: 240
#
#- name: Verify frontend is running
#  uri:
#    url: "{{ API_URL }}"
#    status_code: 200
#  register: frontend_status
#
#- name: Display frontend status
#  debug:
#    var: frontend_status

